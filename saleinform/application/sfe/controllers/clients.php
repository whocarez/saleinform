<?php/* * The Clients*/class Clients extends Controller{	private $objectsArr = array();
	public function __construct(){		parent::Controller();		$this->output->enable_profiler(False);		/* load needed libraries */					$this->load->library('settings_module');		$this->load->library('search_module');		$this->load->library('clients_module');		$this->load->library('mostpopular_module');		$this->load->library('navline_module');		$this->load->library('quickmenu_module');		$this->load->library('contacts_module');		/* generate objects */		$this->objectsArr['search_bar_obj'] = $this->search_module->RenderSearchBar();		$this->objectsArr['mostpopular_searches_obj'] = $this->mostpopular_module->RenderMostpopularSearchesArea();		$this->objectsArr['footermenu_area_obj'] = $this->quickmenu_module->RenderFootermenuArea();		$this->objectsArr['contactstoolbar_area_obj'] = $this->contacts_module->RenderContactsToolbar();	}
		public function index(){		$this->objectsArr['settings_area_obj'] = $this->settings_module->RenderSettingsArea();		$this->objectsArr['clients_list_obj'] = $this->clients_module->RenderRetailersList();		$meta = $this->constant_model->getMeta();		$this->objectsArr['title'] = $meta->meta_title;		$this->objectsArr['meta'] = array(array('name' => 'Content-type', 'content' => 'text/html; charset=utf-8', 'type' => 'equiv'),        									array('name' => 'robots', 'content' => 'no-cache'),        									array('name' => 'description', 'content' => $meta->meta_description),        									array('name' => 'keywords', 'content' => $meta->meta_keywords),        									array('name' => 'robots', 'content' => 'no-cache'));				$this->load->view('layouts/clients/clients', $this->objectsArr);	}
	public function letter(){		$this->index();	}
	public function rules(){		$this->objectsArr['clients_rules_obj'] = $this->load->view('modules/clients_module/regrules.php', null, True);		$meta = $this->constant_model->getMeta();		$this->objectsArr['title'] = $meta->meta_title;		$this->objectsArr['meta'] = array(array('name' => 'Content-type', 'content' => 'text/html; charset=utf-8', 'type' => 'equiv'),        									array('name' => 'robots', 'content' => 'no-cache'),        									array('name' => 'description', 'content' => $meta->meta_description),        									array('name' => 'keywords', 'content' => $meta->meta_keywords),        									array('name' => 'robots', 'content' => 'no-cache'));		$this->load->view('layouts/clients/clientsrules', $this->objectsArr);	}
	public function regform(){		$this->objectsArr['clients_form_obj'] = $this->regProcessing();		$this->load->view('layouts/clients/clientsreg', $this->objectsArr);	}
	public function showproducts(){		$this->objectsArr['client_products_obj'] = $this->getClientProducts();				$meta = $this->constant_model->getMeta();		$this->objectsArr['title'] = $meta->meta_title;		$this->objectsArr['meta'] = array(array('name' => 'Content-type', 'content' => 'text/html; charset=utf-8', 'type' => 'equiv'),        									array('name' => 'robots', 'content' => 'no-cache'),        									array('name' => 'description', 'content' => $meta->meta_description),        									array('name' => 'keywords', 'content' => $meta->meta_keywords),        									array('name' => 'robots', 'content' => 'no-cache'));				$this->load->view('layouts/clients/clientproducts', $this->objectsArr);	}
	public function client($clientSlug, $page = 0){		$this->objectsArr['client_info_obj'] = $this->clients_module->renderClientInfo($clientSlug, $page);		$meta = $this->constant_model->getMeta();		$this->objectsArr['title'] = $meta->meta_title;		$this->objectsArr['meta'] = array(array('name' => 'Content-type', 'content' => 'text/html; charset=utf-8', 'type' => 'equiv'),        									array('name' => 'robots', 'content' => 'no-cache'),        									array('name' => 'description', 'content' => $meta->meta_description),        									array('name' => 'keywords', 'content' => $meta->meta_keywords),        									array('name' => 'robots', 'content' => 'no-cache'));				$this->load->view('layouts/clients/clientinfo', $this->objectsArr);	}
	public function redirect($cRid=null){		if(!$cRid) redirect('clients', 'refresh');		$this->clients_module->redirectToClient($cRid);	}		public function reviewrate(){		$this->output->enable_profiler(False);		$this->output->set_output($this->clients_module->rateReview());		}	
	public function regProcessing(){		return $this->clients_module->registerProcessing();	}
	public function getClientProducts(){		return $this->clients_module->getClientProducts();	}
	public function editreview($clientSlug){		$this->objectsArr['client_info_obj'] = $this->clients_module->reviewProcessing($clientSlug);		$meta = $this->constant_model->getMeta();		$this->objectsArr['title'] = $meta->meta_title;		$this->objectsArr['meta'] = array(array('name' => 'Content-type', 'content' => 'text/html; charset=utf-8', 'type' => 'equiv'),        									array('name' => 'robots', 'content' => 'no-cache'),        									array('name' => 'description', 'content' => $meta->meta_description),        									array('name' => 'keywords', 'content' => $meta->meta_keywords),        									array('name' => 'robots', 'content' => 'no-cache'));		$this->load->view('layouts/clients/editreview', $this->objectsArr);	}	
}
?>